card.html

<div class="container">
  <div class="main-container">
    <div class="first-card-container">
      <div *ngFor="let card of left_cards;let i=index" [ngClass]="{'selected':left_currentcard==card}"
        (click)="selectCardLeft(card)">{{card}}</div>
    </div>
    <div class="swap-button">
      <button [disabled]="right_cards.length==left_cards.length" (click)="toRight()">right</button>
      <button [disabled]="right_cards.length==0" (click)="toLeft()">left</button>
    </div>
    <div class="second-card-container">
      <div *ngFor="let card of right_cards;let i=index" [ngClass]="{'selected':right_currentcard==card}"
        (click)="selectCardRight(card)">{{card}}</div>
    </div>
  </div>
  <div class="input-container">
    <form #cardForm="ngForm" (ngSubmit)="addCard()">
      <div class="input-tag">
        <label for="card-input"> Card:</label>
        <input type="text" id="card-input" name="card-input" [(ngModel)]="newCardValue" required>
      </div>
      <div class="input-button">
        <button type="submit">Add Card</button>
      </div>
    </form>
  </div>
</div> 

card.ts

import { Component, Renderer2 } from '@angular/core';

@Component({
  selector: 'app-cards',
  templateUrl: './cards.component.html',
  styleUrls: ['./cards.component.css']
})
export class CardsComponent {
left_cards:string[]=[];
right_cards:string[]=[];
left_currentcard:string="";
right_currentcard:string="";
newCardValue:string="";



addCard(){
  if(this.newCardValue!=""){
  if (!this.left_cards.includes(this.newCardValue)) {
   
    
    this.left_cards.push(this.newCardValue);
    console.log(this.left_cards);
    this.newCardValue = ""; 
  }}
}
selectCardLeft(card: string) {
  this.left_currentcard = card;
  
  
}

selectCardRight(card: string) {
  this.right_currentcard = card;
  
}

toRight() {
  if (this.left_currentcard !== "" && !this.right_cards.includes(this.left_currentcard)) {
    this.right_cards.push(this.left_currentcard);
    this.left_currentcard = "";
    this.right_currentcard = "";
  }
}

toLeft() {
  if (this.right_currentcard !== "") {
    this.right_cards = this.right_cards.filter(card => card !== this.right_currentcard);
    this.left_currentcard = "";
    this.right_currentcard = "";
  }
}
}
 convert this code into component
