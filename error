app.html

<app-main></app-main>

main.html

<div class="container">
      <app-list></app-list>
      <app-add></app-add>
</div>

main.css

.container{
    display: flex;
    flex-direction: column;
    
}

list.html

<div class="main-container">
  <div class="first-card-container">
    <div *ngFor="let card of left_cards;let i=index" [ngClass]="{'selected':left_currentcard==card}"
      (click)="selectCardLeft(card)">{{card}}</div>
  </div>
  <div class="swap-button">
    <button [disabled]="right_cards.length==left_cards.length||this.left_currentcard==''" (click)="toRight()">right</button>
    <button [disabled]="right_cards.length==0||this.right_currentcard==''" (click)="toLeft()">left</button>
  </div>
  <div class="second-card-container">
    <div *ngFor="let card of right_cards;let i=index" [ngClass]="{'selected':right_currentcard==card}"
      (click)="selectCardRight(card)">{{card}}</div>
  </div>
</div>

list.css

.main-container{
    height: 80vh;
    display: flex;
    overflow: auto;
}
.first-card-container{
    flex: 45%;
    margin: 5px;
}
.first-card-container div{
    text-align: center;
    border: 1px solid black;
    border-radius: 5px;
    background-color: #E5E9EC;
   
    padding: 5px;
    margin-bottom: 5px;
}
.swap-button{
    flex: 10%;
    display: flex;
    justify-content: space-around;
}
.swap-button button{
    margin: 5px;
    height: 29px;
    width: 50px;
}

.second-card-container{
    flex: 45%;
    margin: 5px;
}
.second-card-container div{
    text-align: center;
    border: 1px solid black;
    border-radius: 5px;
    background-color:  #E5E9EC;
   
    padding: 5px;
    margin-bottom: 5px;
}
.selected{
    background-color: rgb(47, 41, 41)!important;
}
@media only screen and (max-width: 600px) {
    .swap-button {
      flex-direction: column;
      justify-content: flex-start;
    }
  }



list.ts

import { Component, Input } from '@angular/core';
import { DataService } from '../data.service';

@Component({
  selector: 'app-list',
  templateUrl: './list.component.html',
  styleUrls: ['./list.component.css']
})
export class ListComponent {
  left_cards:string[]=[];
  right_cards:string[]=[];
  left_currentcard:string="";
  right_currentcard:string="";
  newCardValue:string="";
  
  constructor(private dataService:DataService){
    this.dataService.card$.subscribe(val=>{
      this.newCardValue=val;
      this.addCard();
    })
  }
  
  addCard(){
    if(this.newCardValue!=""){
    if (!this.left_cards.includes(this.newCardValue)) {
     
      
      this.left_cards.push(this.newCardValue);
      
      this.newCardValue = ""; 
    }}
  }
  selectCardLeft(card: string) {
    this.left_currentcard = card;
    
   
    
    
  }
  
  selectCardRight(card: string) {
    this.right_currentcard = card;
    
  }
  
  toRight() {
    if (this.left_currentcard !== "" && !this.right_cards.includes(this.left_currentcard)) {
      this.right_cards.push(this.left_currentcard);
      this.left_currentcard = "";
      this.right_currentcard = "";
    }
  }
  
  toLeft() {
    if (this.right_currentcard !== "") {
      this.right_cards = this.right_cards.filter(card => card !== this.right_currentcard);
      this.left_currentcard = "";
      this.right_currentcard = "";
    }
  }
}



add.html

<div class="input-container">
    <form #cardForm="ngForm" (ngSubmit)="addCard()">
      <div class="input-tag">
        <label for="card-input"> Card:</label>
        <input type="text" id="card-input" name="card-input" [(ngModel)]="newCardValue" required>
      </div>
      <div class="input-button">
        <button type="submit">Add Card</button>
      </div>
    </form>
  </div>


add.css

.input-container{
    margin-top: 20px;
}
.input-container form{
    display: flex;
    justify-content: center;
    align-items: center;

}
.input-tag{
    display: flex;
    justify-content: center;
    align-items: center;
   
}
.input-tag label{
    color: yellow;
}

.input-tag input{
    font-size: 20px;
    height: 25px;
    border-radius: 5px;
    margin-right: 5px;
    margin-left: 5px;
    border: 1px solid black;
    color: black;
    background-color: #E5E9EC;
}


add.ts

import { Component } from '@angular/core';
import { DataService } from '../data.service';

@Component({
  selector: 'app-add',
  templateUrl: './add.component.html',
  styleUrls: ['./add.component.css']
})
export class AddComponent {
  newCardValue:string="";
  constructor(private dataService:DataService){

  }
  addCard(){
    this.dataService.card$.next(this.newCardValue);
    this.newCardValue="";
  }
}

data service


import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class DataService {

  constructor() { }

  card$=new Subject<string>();
}

in this when div is selected and i click outside then selected must be removed
