editor.html




<div id="pform" class="pform">
    <form [formGroup]="articleForm"  id="form" class="form">
        <div id="ptitle" class="ptitle center">
            <label for="title">title</label>
            <input type="text" id="title" name="title" formControlName="title" />
        </div>

        <div id="pdescription" class="pdescription center">
            <label for="des">description</label>
            <input type="text" id="description" name="description" formControlName="description" />
        </div>

        <div id="divtag" class="divtag ">
            <div id="ptags" class="ptags ">
                <label for="tags" >tags</label>
                <div style="display: flex; flex-direction: column">
                    <div>
                        <input type="text" d id="tags" name="tags" formControlName="tags" (keydown)="enter($event)"
                            [(ngModel)]="smalltag" />
                    </div>
                    <div #tagContainer id="dtags" class="dtags"
                        [ngStyle]="{ display: spanTemp.length == 0 ? 'none' : 'flex' }"
                        style="display: flex; flex-wrap: wrap">
                    <span *ngFor="let item of spanTemp;let i =index" (dblclick)="removetag(i)">{{item}}</span>
    
                    </div>
                </div>
            </div>
        </div>
        <div id="button" class="button">
            <button type="submit" [disabled]="!articleForm.valid" (click)=" onSubmit()">submit</button>
        </div>
    </form>
</div>




editor.ts


import { Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';
import { FormArray, FormBuilder, Validators } from '@angular/forms';
import { Route, Router } from '@angular/router';
import { first } from 'rxjs';
import { Card } from 'src/model/card.model';
import { DataService } from 'src/services/data.service';

@Component({
  selector: 'app-editor',
  templateUrl: './editor.component.html',
  styleUrls: ['./editor.component.css'],
  // encapsulation: ViewEncapsulation.None
})
export class EditorComponent {
  @ViewChild('tagContainer', { static: true }) tagContainer!: ElementRef<HTMLDivElement>;
  articleForm;
  smalltag = "";
  spanTemp: string[] = [];
  cardId = 1;
  card: Card = {
    cardId: 0,
    authorName: '',
    authorId: 0,
    title: '',
    description: '',
    tags: [],
    date: '',
    likes: 0
  }
  constructor(private formbuilder: FormBuilder, private dataservice: DataService, private router: Router) {
    this.articleForm = this.formbuilder.group({
      title: ["", [Validators.required]],
      description: ["", [Validators.required]],
      tags: [""]
    });
    this.dataservice.cardid$.subscribe(val => this.cardId = val)

  };

  
  removetag(i:number) {
    console.log(i);
    
    this.spanTemp.slice(i,1);


    console.log(this.spanTemp);

  }


  onSubmit() {
    

    this.card.cardId = this.cardId;
    this.card.authorId = Number(localStorage.getItem('userid'));
    this.card.title = this.articleForm.value.title ?? "";
    this.card.description = this.articleForm.value.description ?? "";
    this.card.date = new Date().toISOString();
    this.card.tags=this.spanTemp;
    this.card.authorName = localStorage.getItem('username') ?? "";
   
    this.dataservice.onSubmitArticle(this.card);
    // this.tagContainer.nativeElement.innerHTML = "";
    this.articleForm.reset();
    this.card = {
      cardId: 0,
      authorName: '',
      authorId: 0,
      title: '',
      description: '',
      tags: [],
      date: '',
      likes: 0
    }
this.spanTemp=[];
    this.cardId++;
    this.dataservice.cardid$.next(this.cardId);
    this.router.navigateByUrl("");
  }

  enter(event: any) {
    

    if (event.key === "Enter" && this.smalltag.trim() != "") {
      event.preventDefault();
      if (this.spanTemp.includes(this.smalltag.trim())) {
        this.articleForm.get('tags')?.reset();
      } else {

        this.spanTemp.push(this.smalltag.trim());

     console.log(this.spanTemp);
     
        this.articleForm.get('tags')?.reset();
      }


    }
    if (event.key === "Enter" && this.smalltag?.trim() == "") {
      event.preventDefault();
      this.articleForm.get('tags')?.reset();
    }


   




  }

}



wht slice method not work in removetag method
